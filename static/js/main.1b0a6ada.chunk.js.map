{"version":3,"sources":["GlobalStyle.js","Templates/ShowWeather/ShowWeather.js","components/InputCity/InputCity.js","Templates/WriteCity/WriteCity.js","Templates/Content/Content.js","image/OpenWeather.png","components/GitHub/GitHub.js","Templates/Footer/Footer.js","components/SwitchBtn/SwitchBtn.js","Templates/Header/Header.js","components/Theme/Theme.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","theme","body","text","ShowWeather","weather","wind","deg","ShowWeatherWrapper","WeathTitle","style","lineHeight","margin","main","temp","temp_max","temp_min","clouds","all","humidity","pressure","toFixed","description","speed","styled","h4","section","InputCity","props","inputEl","onChangeValue","value","onSubmitValue","onSubmit","InputPlace","ref","onChange","placeholder","input","WriteCity","button","showWeather","Button","onClick","Title","p","toggleBorder","Content","isLoading","ContentWrapper","LoadTitle","undefined","GitHub","Anchor","href","GithubOutlined","Text","a","Footer","FooterWrapper","ImgAPI","src","OpenWeather","alt","footer","headFoot","img","SwitchBtn","themeToggler","class","type","Header","onButtonClick","city","HeaderWrapper","ChoosenCity","header","lightTheme","darkTheme","App","useState","setValue","console","log","setCity","setWeather","setIsLoading","useEffect","fetch","then","response","json","result","catch","error","alert","setShowWeather","setTheme","useRef","AppWrapper","e","preventDefault","current","focus","target","div","root","document","querySelector","render"],"mappings":"2MAEaA,EAAcC,YAAH,mbAOP,qBAAGC,MAAkBC,QAC1B,qBAAGD,MAAkBE,QAWrB,qBAAGF,MAAkBE,Q,eClBpBC,EAAc,SAAC,GAAiB,IAAD,gBAAdC,EAAc,EAAdA,QA2B5B,MA1B4B,qBAAjBA,EAAQC,OACQ,IAArBD,EAAQC,KAAKC,KAAkC,MAArBF,EAAQC,KAAKC,MACzCF,EAAQC,KAAKC,IAAM,oDAEjBF,EAAQC,KAAKC,IAAM,GAAKF,EAAQC,KAAKC,IAAM,KAC7CF,EAAQC,KAAKC,IAAM,+FAEI,OAArBF,EAAQC,KAAKC,MACfF,EAAQC,KAAKC,IAAM,0DAEjBF,EAAQC,KAAKC,IAAM,IAAMF,EAAQC,KAAKC,IAAM,MAC9CF,EAAQC,KAAKC,IAAM,6EAEI,MAArBF,EAAQC,KAAKC,MACfF,EAAQC,KAAKC,IAAM,kCAEjBF,EAAQC,KAAKC,IAAM,KAAOF,EAAQC,KAAKC,IAAM,MAC/CF,EAAQC,KAAKC,IAAM,uEAEI,MAArBF,EAAQC,KAAKC,MACfF,EAAQC,KAAKC,IAAM,oDAEjBF,EAAQC,KAAKC,IAAM,KAAOF,EAAQC,KAAKC,IAAM,MAC/CF,EAAQC,KAAKC,IAAM,0FAIrB,eAACC,EAAD,WACE,cAACC,EAAD,2GACA,oBAAGC,MAAO,CAAEC,WAAY,OAAQC,OAAQ,KAAxC,wFACgBP,QADhB,IACgBA,GADhB,UACgBA,EAASQ,YADzB,aACgB,EAAeC,KAD/B,UAEE,uBAFF,uJAG6BT,QAH7B,IAG6BA,GAH7B,UAG6BA,EAASQ,YAHtC,aAG6B,EAAeE,SAH5C,UAIE,uBAJF,iJAK4BV,QAL5B,IAK4BA,GAL5B,UAK4BA,EAASQ,YALrC,aAK4B,EAAeG,SAL3C,UAME,uBANF,wEAOeX,QAPf,IAOeA,GAPf,UAOeA,EAASY,cAPxB,aAOe,EAAiBC,IAPhC,IAQE,uBARF,kEAScb,QATd,IAScA,GATd,UAScA,EAASQ,YATvB,aASc,EAAeM,SAT7B,IAUE,uBAVF,0HAWiC,OAAPd,QAAO,IAAPA,GAAA,UAAAA,EAASQ,YAAT,eAAeO,UAAW,MAAMC,QAAQ,GAXlE,2CAaE,uBAbF,yCAcWhB,EAAQA,QAAR,OAAkBA,QAAlB,IAAkBA,OAAlB,EAAkBA,EAASA,QAAQ,GAAGQ,KAAO,GACrDR,EAAQA,QAAR,OAAkBA,QAAlB,IAAkBA,OAAlB,EAAkBA,EAASA,QAAQ,GAAGiB,YAAc,GACrD,uBAhBF,0CAiBUjB,QAjBV,IAiBUA,GAjBV,UAiBUA,EAASC,YAjBnB,aAiBU,EAAeC,IAjBzB,YAiBgCF,QAjBhC,IAiBgCA,GAjBhC,UAiBgCA,EAASC,YAjBzC,aAiBgC,EAAeiB,MAjB/C,wBAuBAd,EAAae,IAAOC,GAAV,2FAKVjB,EAAqBgB,IAAOE,QAAV,iKC1DXC,EAAY,SAACC,GACxB,IAAMC,EAAiDD,EAAjDC,QAASC,EAAwCF,EAAxCE,cAAeC,EAAyBH,EAAzBG,MAAOC,EAAkBJ,EAAlBI,cACrC,OACE,sBAAMC,SAAUD,EAAhB,SACE,cAACE,EAAD,CACEC,IAAKN,EACLE,MAAOA,EACPK,SAAUN,EACVO,YAAY,6FAMdH,EAAaV,IAAOc,MAAV,uRCbHC,EAAY,SAACX,GACxB,IACIY,EADER,EAA+BJ,EAA/BI,cAAeS,EAAgBb,EAAhBa,YAOrB,OAJED,EADEC,EACO,cAACC,EAAD,CAAQC,QAASX,EAAjB,4HAEA,cAACU,EAAD,CAAQC,QAASX,EAAjB,4CAGT,sCACIS,GACA,cAACG,EAAD,yPAEAH,GAAe,cAAC,EAAD,eAAeb,IAC/BY,MAKDI,EAAQpB,IAAOqB,EAAV,uEAILH,EAASlB,IAAOgB,OAAV,4IAED,qBAAGvC,MAAkBE,QAChB,qBAAGF,MAAkB6C,gBCzBxBC,EAAU,SAACnB,GACtB,IAAMa,EAAoCb,EAApCa,YAAaO,EAAuBpB,EAAvBoB,UAAW3C,EAAYuB,EAAZvB,QAC9B,OACE,eAAC4C,EAAD,WACE,cAAC,EAAD,eAAerB,IACdoB,EACC,cAACE,EAAD,0BAEAT,GACE,wCACoBU,IAAjB9C,EAAQQ,KACP,cAAC,EAAD,eAAiBe,IAEjB,cAAC,EAAD,4JAQRsB,EAAY1B,IAAOqB,EAAV,2FAKTD,EAAQpB,IAAOqB,EAAV,2FAKLI,EAAiBzB,IAAOE,QAAV,mNCpCL,MAA0B,wC,SCK5B0B,EAAS,WACpB,OACE,eAACC,EAAD,CAAQC,KAAK,6BAAb,UACE,cAACC,EAAA,EAAD,IACA,cAACC,EAAD,0BAKAA,EAAOhC,IAAOqB,EAAV,mEAKJQ,EAAS7B,IAAOiC,EAAV,6HCdCC,EAAS,WACpB,OACE,eAACC,EAAD,WACE,mBAAGL,KAAK,8BAAR,SACE,cAACM,EAAD,CAAQC,IAAKC,EAAaC,IAAI,WAEhC,cAAC,EAAD,QAKAJ,EAAgBnC,IAAOwC,OAAV,iNAOH,qBAAG/D,MAAkBgE,YAI/BL,EAASpC,IAAO0C,IAAV,6CCvBCC,G,OAAY,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,aAAcnE,EAAY,EAAZA,MACxC,OACE,wBAAOoE,MAAM,SAAb,UACE,uBAAOC,KAAK,WAAWvC,MAAO9B,EAAO0C,QAASyB,IAC9C,sBAAMC,MAAM,sBCJLE,EAAS,SAAC3C,GACrB,IAAM4C,EAAwB5C,EAAxB4C,cAAeC,EAAS7C,EAAT6C,KAErB,OACE,eAACC,EAAD,WACE,cAAC,EAAD,eAAe9C,IACf,cAAC+C,EAAD,CAAahC,QAAS6B,EAAtB,SACGC,GAAc,0DAMjBC,EAAgBlD,IAAOoD,OAAV,gNAOH,qBAAG3E,MAAkBgE,YAG/BU,EAAcnD,IAAOqB,EAAV,0IAEN,qBAAG5C,MAAkBE,QC7BnB0E,EAAa,CACxB3E,KAAM,OACNC,KAAM,OACN2C,aAAc,UACdmB,SAAU,WAGCa,EAAY,CACvB5E,KAAM,OACNC,KAAM,OACN2C,aAAc,UACdmB,SAAU,WCHCc,EAAM,WACjB,MAA0BC,mBAAS,IAAnC,mBAAOjD,EAAP,KAAckD,EAAd,KAUAC,QAAQC,IAAI,QAASpD,GAErB,MAAwBiD,mBAAS,IAAjC,mBAAOP,EAAP,KAAaW,EAAb,KACA,EAA8BJ,mBAAS,CACrC/D,OAAQ,GACRJ,KAAM,GACNR,QAAS,GACTC,KAAM,KAJR,mBAAOD,EAAP,KAAgBgF,EAAhB,KAMA,EAAkCL,oBAAS,GAA3C,mBAAOhC,EAAP,KAAkBsC,EAAlB,KAEAC,qBAAU,WAERD,GAAa,GACbE,MAAM,qDAAD,OACkDf,EADlD,+BAFQ,qCAKVgB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLV,QAAQC,IAAI,SAAUS,GACtBP,EAAW,CACTpE,OAAM,OAAE2E,QAAF,IAAEA,OAAF,EAAEA,EAAQ3E,OAChBJ,KAAI,OAAE+E,QAAF,IAAEA,OAAF,EAAEA,EAAQ/E,KACdR,QAAO,OAAEuF,QAAF,IAAEA,OAAF,EAAEA,EAAQvF,QACjBC,KAAI,OAAEsF,QAAF,IAAEA,OAAF,EAAEA,EAAQtF,OAEhBgF,GAAa,MAEdO,OAAM,SAACC,GAAD,OAAWC,MAAM,QAASD,QAClC,CAACrB,IAEJS,QAAQC,IAAI,OAAQV,GACpBS,QAAQC,IAAI,UAAW9E,GAEvB,MAAsC2E,oBAAS,GAA/C,mBAAOvC,EAAP,KAAoBuD,EAApB,KAEAT,qBAAU,WACRS,GAAgBvD,KACf,CAACpC,IAEJ,MAA0B2E,mBAAS,SAAnC,mBAAO/E,EAAP,KAAcgG,EAAd,KAMAf,QAAQC,IAAI,QAASlF,GAErB,IAAM4B,EAAUqE,iBAAO,MAQvB,OACE,cAAC,IAAD,CAAejG,MAAiB,UAAVA,EAAoB4E,EAAaC,EAAvD,SACE,eAACqB,GAAD,WACE,cAACpG,EAAD,IACA,cAAC,EAAD,CACEqE,aAnBa,WACC6B,EAAV,UAAVhG,EAA6B,OAAmB,UAmB1CA,MAAOA,EACPuE,cAdc,SAAC4B,GACrBA,EAAEC,iBACG5D,GACHZ,EAAQyE,QAAQC,SAYZ9B,KAAMA,IAER,cAAC,EAAD,CACEzB,UAAWA,EACXP,YAAaA,EACbpC,QAASA,EACT0B,MAAOA,EACPD,cA/ER,SAAuBsE,GACrBnB,EAASmB,EAAEI,OAAOzE,QA+EZC,cA7ER,SAAuBoE,GACrBA,EAAEC,iBACFjB,EAAQrD,GACRkD,EAAS,KA2EHpD,QAASA,IAEX,cAAC,EAAD,UAMFsE,GAAa3E,IAAOiF,IAAV,4LChGVC,GAAOC,SAASC,cAAc,SAElCC,YAAO,cAAC,EAAD,IAASH,M","file":"static/js/main.1b0a6ada.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  \r\n* {  \r\n\tborder: none;  \r\n   outline: none;\r\n\t}  \r\n body {\r\n   background: ${({ theme }) => theme.body};\r\n   color: ${({ theme }) => theme.text};\r\n   font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\r\n   transition: all 0.50s linear;\r\n   display: flex;\r\n   justify-content: center;\r\n   margin: 0;\r\n   padding: 0;\r\n   list-style: none;\r\n   text-decoration: none;\r\n }\r\n a{\r\n   color: ${({ theme }) => theme.text};\r\n    list-style: none;\r\n    text-decoration: none;\r\n }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ShowWeather = ({ weather }) => {\r\n  if (typeof weather.wind !== \"undefined\") {\r\n    if (weather.wind.deg === 0 || weather.wind.deg === 360) {\r\n      weather.wind.deg = \"Северный\";\r\n    }\r\n    if (weather.wind.deg > 0 && weather.wind.deg < 90) {\r\n      weather.wind.deg = \"Северо-восточный\";\r\n    }\r\n    if (weather.wind.deg === \"90\") {\r\n      weather.wind.deg = \"Восточный\";\r\n    }\r\n    if (weather.wind.deg > 90 && weather.wind.deg < 180) {\r\n      weather.wind.deg = \"Юго-восточный\";\r\n    }\r\n    if (weather.wind.deg === 180) {\r\n      weather.wind.deg = \"Южный\";\r\n    }\r\n    if (weather.wind.deg > 180 && weather.wind.deg < 270) {\r\n      weather.wind.deg = \"Юго-западный\";\r\n    }\r\n    if (weather.wind.deg === 270) {\r\n      weather.wind.deg = \"Западный\";\r\n    }\r\n    if (weather.wind.deg > 270 && weather.wind.deg < 360) {\r\n      weather.wind.deg = \"Северо-западный\";\r\n    }\r\n  }\r\n  return (\r\n    <ShowWeatherWrapper>\r\n      <WeathTitle>Погода на сегодня</WeathTitle>\r\n      <p style={{ lineHeight: \"30px\", margin: \"0\" }}>\r\n        Температура: {weather?.main?.temp} ℃\r\n        <br />\r\n        Максимальная температура: {weather?.main?.temp_max} ℃\r\n        <br />\r\n        Минимальная температура: {weather?.main?.temp_min} ℃\r\n        <br />\r\n        Облачность: {weather?.clouds?.all}%\r\n        <br />\r\n        Влажность: {weather?.main?.humidity}%\r\n        <br />\r\n        Атмосферное давление: {(weather?.main?.pressure / 1.33).toFixed(0)} мм\r\n        рт.ст.\r\n        <br />\r\n        Погода: {weather.weather ? weather?.weather[0].main : \"\"}\r\n        {weather.weather ? weather?.weather[0].description : \"\"}\r\n        <br />\r\n        Ветер: {weather?.wind?.deg}, {weather?.wind?.speed} м/с\r\n      </p>\r\n    </ShowWeatherWrapper>\r\n  );\r\n};\r\n\r\nconst WeathTitle = styled.h4`\r\n  font-size: 18px;\r\n  font-weight: normal;\r\n  margin: 10px 0;\r\n`;\r\nconst ShowWeatherWrapper = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n  padding: 0;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const InputCity = (props) => {\r\n  let { inputEl, onChangeValue, value, onSubmitValue } = props;\r\n  return (\r\n    <form onSubmit={onSubmitValue}>\r\n      <InputPlace\r\n        ref={inputEl}\r\n        value={value}\r\n        onChange={onChangeValue}\r\n        placeholder=\"Название города\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nconst InputPlace = styled.input`\r\n  width: 280px;\r\n  height: 30px;\r\n  color: #000;\r\n  background: transparent;\r\n  border-bottom: 1px solid #fff;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  &:focus {\r\n    box-shadow: 0px 0.2em 2.5em #c4c4c4;\r\n    transform: scale(1.025);\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { InputCity } from \"../../components/InputCity\";\r\n\r\nexport const WriteCity = (props) => {\r\n  let { onSubmitValue, showWeather } = props;\r\n  let button;\r\n  if (showWeather) {\r\n    button = <Button onClick={onSubmitValue}>Выбрать другой город</Button>;\r\n  } else {\r\n    button = <Button onClick={onSubmitValue}>Поиск</Button>;\r\n  }\r\n  return (\r\n    <>\r\n      {!showWeather && (\r\n        <Title>Пожалуйста, напишите название вашего города</Title>\r\n      )}\r\n      {!showWeather && <InputCity {...props} />}\r\n      {button}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Title = styled.p`\r\n  font-size: 16px;\r\n  text-align: center;\r\n`;\r\nconst Button = styled.button`\r\n  // color: #fafafa;\r\n  color: ${({ theme }) => theme.text};\r\n  background: ${({ theme }) => theme.toggleBorder};\r\n  margin-top: 20px;\r\n  width: 285px;\r\n  height: 40px;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ShowWeather } from \"../ShowWeather\";\r\nimport { WriteCity } from \"../WriteCity\";\r\n\r\nexport const Content = (props) => {\r\n  let { showWeather, isLoading, weather } = props;\r\n  return (\r\n    <ContentWrapper>\r\n      <WriteCity {...props} />\r\n      {isLoading ? (\r\n        <LoadTitle>Loading ...</LoadTitle>\r\n      ) : (\r\n        showWeather && (\r\n          <>\r\n            {weather.main !== undefined ? (\r\n              <ShowWeather {...props} />\r\n            ) : (\r\n              <Title>Указанный город не найден</Title>\r\n            )}\r\n          </>\r\n        )\r\n      )}\r\n    </ContentWrapper>\r\n  );\r\n};\r\nconst LoadTitle = styled.p`\r\n  font-size: 18px;\r\n  text-align: center;\r\n  margin-top: 40%;\r\n`;\r\nconst Title = styled.p`\r\n  font-size: 18px;\r\n  text-align: center;\r\n  margin-top: 30%;\r\n`;\r\nconst ContentWrapper = styled.section`\r\n  display: flex;\r\n  padding: 10px;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-content: center;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/OpenWeather.4595304d.png\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport OpenWeather from \"../../image/OpenWeather.png\";\r\nimport { GithubOutlined } from \"@ant-design/icons\";\r\n\r\nexport const GitHub = () => {\r\n  return (\r\n    <Anchor href=\"https://github.com/Ting-SK\">\r\n      <GithubOutlined />\r\n      <Text>Ting-SK</Text>\r\n    </Anchor>\r\n  );\r\n};\r\n\r\nconst Text = styled.p`\r\n  font-size: 12px;\r\n  color: #fafafa;\r\n`;\r\n\r\nconst Anchor = styled.a`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport OpenWeather from \"../../image/OpenWeather.png\";\r\nimport { GitHub } from \"../../components/GitHub\";\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <FooterWrapper>\r\n      <a href=\"https://openweathermap.org/\">\r\n        <ImgAPI src={OpenWeather} alt=\"asda\" />\r\n      </a>\r\n      <GitHub />\r\n    </FooterWrapper>\r\n  );\r\n};\r\n\r\nconst FooterWrapper = styled.footer`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100px;\r\n  background: ${({ theme }) => theme.headFoot};\r\n  // background: #9c8cbb;\r\n`;\r\n\r\nconst ImgAPI = styled.img`\r\n  width: 100px;\r\n`;\r\n","import { useState } from \"react\";\r\nimport React from \"./index\";\r\nimport \"./SwitchBtn.css\";\r\n\r\nexport const SwitchBtn = ({ themeToggler, theme }) => {\r\n  return (\r\n    <label class=\"switch\">\r\n      <input type=\"checkbox\" value={theme} onClick={themeToggler} />\r\n      <span class=\"slider round\"></span>\r\n    </label>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { SwitchBtn } from \"../../components/SwitchBtn\";\r\n\r\nexport const Header = (props) => {\r\n  let { onButtonClick, city } = props;\r\n\r\n  return (\r\n    <HeaderWrapper>\r\n      <SwitchBtn {...props} />\r\n      <ChoosenCity onClick={onButtonClick}>\r\n        {city ? city : \"Не выбран\"}\r\n      </ChoosenCity>\r\n    </HeaderWrapper>\r\n  );\r\n};\r\n\r\nconst HeaderWrapper = styled.header`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 90px;\r\n  background: ${({ theme }) => theme.headFoot};\r\n  // background: #9c8cbb;\r\n`;\r\nconst ChoosenCity = styled.p`\r\n  // color: #fafafa;\r\n  color: ${({ theme }) => theme.text};\r\n\r\n  font-size: 18px;\r\n  text-decoration: underline;\r\n  cursor: pointer;\r\n`;\r\n","export const lightTheme = {\r\n  body: \"#FFF\",\r\n  text: \"#000\",\r\n  toggleBorder: \"#9c8cbb\",\r\n  headFoot: \"#9c8cbb\",\r\n};\r\n\r\nexport const darkTheme = {\r\n  body: \"#999\",\r\n  text: \"#fff\",\r\n  toggleBorder: \"#6B8096\",\r\n  headFoot: \"#363537\",\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport styled, { ThemeProvider } from \"styled-components\";\r\nimport { GlobalStyle } from \"./GlobalStyle\";\r\nimport { Content } from \"./Templates/Content\";\r\nimport { Footer } from \"./Templates/Footer\";\r\nimport { Header } from \"./Templates/Header\";\r\nimport { lightTheme, darkTheme } from \"./components/Theme/Theme\";\r\n\r\nexport const App = () => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  function onChangeValue(e) {\r\n    setValue(e.target.value);\r\n  }\r\n  function onSubmitValue(e) {\r\n    e.preventDefault();\r\n    setCity(value);\r\n    setValue(\"\");\r\n  }\r\n  console.log(\"value\", value);\r\n\r\n  const [city, setCity] = useState(\"\");\r\n  const [weather, setWeather] = useState({\r\n    clouds: \"\",\r\n    main: \"\",\r\n    weather: \"\",\r\n    wind: \"\",\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const API_KEY = `594e5978ad1b3ecaa1651cfb29c9a33d`;\r\n    setIsLoading(true);\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        console.log(\"result\", result);\r\n        setWeather({\r\n          clouds: result?.clouds,\r\n          main: result?.main,\r\n          weather: result?.weather,\r\n          wind: result?.wind,\r\n        });\r\n        setIsLoading(false);\r\n      })\r\n      .catch((error) => alert(\"error\", error));\r\n  }, [city]);\r\n\r\n  console.log(\"city\", city);\r\n  console.log(\"weather\", weather);\r\n\r\n  const [showWeather, setShowWeather] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setShowWeather(!showWeather);\r\n  }, [weather]);\r\n\r\n  const [theme, setTheme] = useState(\"light\");\r\n\r\n  const themeToggler = () => {\r\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\r\n  };\r\n\r\n  console.log(\"theme\", theme);\r\n\r\n  const inputEl = useRef(null);\r\n  const onButtonClick = (e) => {\r\n    e.preventDefault();\r\n    if (!showWeather) {\r\n      inputEl.current.focus();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\r\n      <AppWrapper>\r\n        <GlobalStyle />\r\n        <Header\r\n          themeToggler={themeToggler}\r\n          theme={theme}\r\n          onButtonClick={onButtonClick}\r\n          city={city}\r\n        />\r\n        <Content\r\n          isLoading={isLoading}\r\n          showWeather={showWeather}\r\n          weather={weather}\r\n          value={value}\r\n          onChangeValue={onChangeValue}\r\n          onSubmitValue={onSubmitValue}\r\n          inputEl={inputEl}\r\n        />\r\n        <Footer />\r\n      </AppWrapper>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nconst AppWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  max-width: 800px;\r\n  width: 100vw;\r\n  height: 100vh;\r\n`;\r\n","import { render } from \"@testing-library/react\";\nimport React from \"react\";\nimport { App } from \"./App\";\n\nconst root = document.querySelector(\"#root\");\nconst AppRender = () => {\n  render(<App />, root);\n};\n\nAppRender();\n"],"sourceRoot":""}