{"version":3,"sources":["GlobalStyle.js","core/context.js","components/Input/Input.js","components/InputCity/InputCity.js","Templates/ShowWeather/ShowWeather.js","Templates/Weather/Weather.js","core/hooks/useWeather.js","Templates/Content/Content.js","Templates/WriteCity/WriteCity.js","image/OpenWeather.png","components/GitHub/GitHub.js","Templates/Footer/Footer.js","components/SwitchBtn/SwitchBtn.js","Templates/Header/Header.js","components/Theme/Theme.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","theme","body","text","AppContext","createContext","AppProvider","props","useState","city","setCity","values","value","setValue","inputEl","useRef","Provider","children","useAppContext","useContext","Input","InputPlace","ref","onChange","e","target","trim","placeholder","styled","input","InputCity","Form","onSubmit","preventDefault","Button","form","button","toggleBorder","ShowWeather","weatherData","wind","deg","ShowWeatherWrapper","WeathTitle","style","lineHeight","margin","main","temp","temp_max","temp_min","clouds","all","humidity","pressure","toFixed","description","speed","h4","section","Weather","weather","setWeatherData","isLoading","setIsLoading","error","setError","useEffect","fetch","then","response","json","result","cod","console","log","catch","useWeather","Content","p","ContentWrapper","GitHub","Anchor","href","GithubOutlined","Text","a","Footer","FooterWrapper","ImgAPI","src","OpenWeather","alt","footer","headFoot","img","SwitchBtn","themeToggler","class","type","onClick","Header","HeaderWrapper","ChoosenCity","current","focus","header","lightTheme","darkTheme","App","setTheme","AppWrapper","div","root","document","querySelector","render"],"mappings":"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","file":"static/js/main.546ad1f1.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  \r\n* {  \r\n\tborder: none;  \r\n   outline: none;\r\n\t}  \r\n body {\r\n   background: ${({ theme }) => theme.body};\r\n   color: ${({ theme }) => theme.text};\r\n   font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\r\n   transition: all 0.50s linear;\r\n   display: flex;\r\n   justify-content: center;\r\n   margin: 0;\r\n   padding: 0;\r\n   list-style: none;\r\n   text-decoration: none;\r\n }\r\n a{\r\n   color: ${({ theme }) => theme.text};\r\n    list-style: none;\r\n    text-decoration: none;\r\n }\r\n`;\r\n","import React, { createContext, useContext, useRef, useState } from \"react\";\r\n\r\nconst AppContext = createContext({});\r\n\r\nexport const AppProvider = (props) => {\r\n  const [city, setCity] = useState(\"\");\r\n  const [value, setValue] = useState(\"\");\r\n  const inputEl = useRef(null);\r\n\r\n  let values = { city, setCity, value, setValue, inputEl };\r\n\r\n  return (\r\n    <AppContext.Provider value={values}>{props.children}</AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAppContext = () => useContext(AppContext);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useAppContext } from \"../../core/context\";\r\n\r\nexport const Input = () => {\r\n  let { setValue, value, inputEl } = useAppContext();\r\n  return (\r\n    <InputPlace\r\n      ref={inputEl}\r\n      value={value}\r\n      onChange={(e) => setValue(e.target.value.trim())}\r\n      placeholder=\"Название города\"\r\n    />\r\n  );\r\n};\r\n\r\nconst InputPlace = styled.input`\r\n  width: 280px;\r\n  height: 30px;\r\n  color: #000;\r\n  background: transparent;\r\n  border-bottom: 1px solid #fff;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  &:focus {\r\n    box-shadow: 0px 0.2em 2.5em #c4c4c4;\r\n    transform: scale(1.025);\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useAppContext } from \"../../core/context\";\r\nimport { Input } from \"../Input/Input\";\r\n\r\nexport const InputCity = () => {\r\n  let { setCity, value, setValue } = useAppContext();\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    setCity(value);\r\n    setValue(\"\");\r\n  };\r\n  return (\r\n    <Form onSubmit={onSubmitForm}>\r\n      <Input />\r\n      <Button>Поиск</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst Button = styled.button`\r\n  // color: #fafafa;\r\n  color: ${({ theme }) => theme.text};\r\n  background: ${({ theme }) => theme.toggleBorder};\r\n  margin-top: 20px;\r\n  width: 285px;\r\n  height: 40px;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ShowWeather = ({ weatherData }) => {\r\n  if (typeof weatherData.wind !== \"undefined\") {\r\n    if (weatherData.wind.deg === 0 || weatherData.wind.deg === 360) {\r\n      weatherData.wind.deg = \"Северный\";\r\n    }\r\n    if (weatherData.wind.deg > 0 && weatherData.wind.deg < 90) {\r\n      weatherData.wind.deg = \"Северо-восточный\";\r\n    }\r\n    if (weatherData.wind.deg === \"90\") {\r\n      weatherData.wind.deg = \"Восточный\";\r\n    }\r\n    if (weatherData.wind.deg > 90 && weatherData.wind.deg < 180) {\r\n      weatherData.wind.deg = \"Юго-восточный\";\r\n    }\r\n    if (weatherData.wind.deg === 180) {\r\n      weatherData.wind.deg = \"Южный\";\r\n    }\r\n    if (weatherData.wind.deg > 180 && weatherData.wind.deg < 270) {\r\n      weatherData.wind.deg = \"Юго-западный\";\r\n    }\r\n    if (weatherData.wind.deg === 270) {\r\n      weatherData.wind.deg = \"Западный\";\r\n    }\r\n    if (weatherData.wind.deg > 270 && weatherData.wind.deg < 360) {\r\n      weatherData.wind.deg = \"Северо-западный\";\r\n    }\r\n  }\r\n  return (\r\n    <ShowWeatherWrapper>\r\n      <WeathTitle>Погода на сегодня</WeathTitle>\r\n      <p style={{ lineHeight: \"30px\", margin: \"0\" }}>\r\n        Температура: {weatherData?.main?.temp} ℃\r\n        <br />\r\n        Максимальная температура: {weatherData?.main?.temp_max} ℃\r\n        <br />\r\n        Минимальная температура: {weatherData?.main?.temp_min} ℃\r\n        <br />\r\n        Облачность: {weatherData?.clouds?.all}%\r\n        <br />\r\n        Влажность: {weatherData?.main?.humidity}%\r\n        <br />\r\n        Атмосферное давление: {(weatherData?.main?.pressure / 1.33).toFixed(\r\n          0\r\n        )}{\" \"}\r\n        мм рт.ст.\r\n        <br />\r\n        Погода:{\" \"}\r\n        {weatherData.weatherData ? weatherData?.weatherData[0].main : \"\"}\r\n        {weatherData.weatherData ? weatherData?.weatherData[0].description : \"\"}\r\n        <br />\r\n        Ветер: {weatherData?.wind?.deg}, {weatherData?.wind?.speed} м/с\r\n      </p>\r\n    </ShowWeatherWrapper>\r\n  );\r\n};\r\n\r\nconst WeathTitle = styled.h4`\r\n  font-size: 18px;\r\n  font-weight: normal;\r\n  margin: 10px 0;\r\n`;\r\nconst ShowWeatherWrapper = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 30px;\r\n  padding: 0;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useAppContext } from \"../../core/context\";\r\nimport { useWeather } from \"../../core/hooks/useWeather\";\r\nimport { ShowWeather } from \"../ShowWeather\";\r\n\r\nexport const Weather = () => {\r\n  let { city } = useAppContext();\r\n  const [weatherData, isLoading, error] = useWeather(city);\r\n  if (isLoading) {\r\n    return <WeathTitle>Загрузка</WeathTitle>;\r\n  }\r\n  if (error) {\r\n    return <WeathTitle>{error}</WeathTitle>;\r\n  }\r\n\r\n  return <ShowWeather weatherData={weatherData} />;\r\n};\r\n\r\nconst WeathTitle = styled.h4`\r\n  font-size: 18px;\r\n  font-weight: normal;\r\n  margin: 30% 0;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useAppContext } from \"../context\";\r\n\r\nexport const useWeather = (city) => {\r\n  const [weatherData, setWeatherData] = useState({\r\n    clouds: \"\",\r\n    main: \"\",\r\n    weather: \"\",\r\n    wind: \"\",\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setError(null);\r\n    const API_KEY = `594e5978ad1b3ecaa1651cfb29c9a33d`;\r\n    setIsLoading(true);\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.cod === \"404\" ) {\r\n          setError('Город не найден');\r\n        }\r\n        if (result.cod === \"400\") {\r\n          setError('Напишите название города');\r\n        }\r\n        setWeatherData({\r\n          clouds: result?.clouds,\r\n          main: result?.main,\r\n          weather: result?.weather,\r\n          wind: result?.wind,\r\n        });\r\n        setIsLoading(false);\r\n        console.log(\"result\", result);\r\n      })\r\n      .catch((error) => setError(error));\r\n  }, [city]);\r\n  return [weatherData, isLoading, error];\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { InputCity } from \"../../components/InputCity\";\r\nimport { useAppContext } from \"../../core/context\";\r\nimport { Weather } from \"../Weather\";\r\nimport { WriteCity } from \"../WriteCity\";\r\n\r\nexport const Content = () => {\r\n  return (\r\n    <ContentWrapper>\r\n      <InputCity />\r\n      <Weather />\r\n    </ContentWrapper>\r\n  );\r\n};\r\n\r\nconst ContentWrapper = styled.section`\r\n  display: flex;\r\n  padding: 10px;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-content: center;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { InputCity } from \"../../components/InputCity\";\r\nimport { useAppContext } from \"../../core/context\";\r\n\r\nexport const WriteCity = () => {\r\n  let { city } = useAppContext();\r\n  return (\r\n    <>\r\n      {!city && <Title>Пожалуйста, напишите название вашего города</Title>}\r\n      <InputCity />\r\n    </>\r\n  );\r\n};\r\n\r\nconst Title = styled.p`\r\n  font-size: 16px;\r\n  text-align: center;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/OpenWeather.4595304d.png\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GithubOutlined } from \"@ant-design/icons\";\r\n\r\nexport const GitHub = () => {\r\n  return (\r\n    <Anchor href=\"https://github.com/Ting-SK\">\r\n      <GithubOutlined />\r\n      <Text>Ting-SK</Text>\r\n    </Anchor>\r\n  );\r\n};\r\n\r\nconst Text = styled.p`\r\n  font-size: 12px;\r\n  color: #fafafa;\r\n`;\r\n\r\nconst Anchor = styled.a`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport OpenWeather from \"../../image/OpenWeather.png\";\r\nimport { GitHub } from \"../../components/GitHub\";\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <FooterWrapper>\r\n      <a href=\"https://openweathermap.org/\">\r\n        <ImgAPI src={OpenWeather} alt=\"asda\" />\r\n      </a>\r\n      <GitHub />\r\n    </FooterWrapper>\r\n  );\r\n};\r\n\r\nconst FooterWrapper = styled.footer`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100px;\r\n  background: ${({ theme }) => theme.headFoot};\r\n  // background: #9c8cbb;\r\n`;\r\n\r\nconst ImgAPI = styled.img`\r\n  width: 100px;\r\n`;\r\n","import React from \"./index\";\r\nimport \"./SwitchBtn.css\";\r\n\r\nexport const SwitchBtn = ({ themeToggler, theme }) => {\r\n  return (\r\n    <label class=\"switch\">\r\n      <input type=\"checkbox\" value={theme} onClick={themeToggler} />\r\n      <span class=\"slider round\"></span>\r\n    </label>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { SwitchBtn } from \"../../components/SwitchBtn\";\r\nimport { useAppContext } from \"../../core/context\";\r\n\r\nexport const Header = (props) => {\r\n  let { city, inputEl } = useAppContext();\r\n  const onFocus = () => {\r\n    inputEl.current.focus();\r\n  };\r\n  return (\r\n    <HeaderWrapper>\r\n      <SwitchBtn {...props} />\r\n      <ChoosenCity onClick={onFocus}>{city} </ChoosenCity>\r\n    </HeaderWrapper>\r\n  );\r\n};\r\n\r\nconst HeaderWrapper = styled.header`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 90px;\r\n  background: ${({ theme }) => theme.headFoot};\r\n  // background: #9c8cbb;\r\n`;\r\nconst ChoosenCity = styled.p`\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 16px;\r\n  text-decoration: underline;\r\n  overflow: hidden;\r\n  width: 100px;\r\n  text-overflow: ellipsis;\r\n  cursor: pointer;\r\n`;\r\n","export const lightTheme = {\r\n  body: \"#FFF\",\r\n  text: \"#000\",\r\n  toggleBorder: \"#9c8cbb\",\r\n  headFoot: \"#9c8cbb\",\r\n};\r\n\r\nexport const darkTheme = {\r\n  body: \"#999\",\r\n  text: \"#fff\",\r\n  toggleBorder: \"#6B8096\",\r\n  headFoot: \"#363537\",\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport styled, { ThemeProvider } from \"styled-components\";\r\nimport { GlobalStyle } from \"./GlobalStyle\";\r\nimport { Content } from \"./Templates/Content\";\r\nimport { Footer } from \"./Templates/Footer\";\r\nimport { Header } from \"./Templates/Header\";\r\nimport { lightTheme, darkTheme } from \"./components/Theme/Theme\";\r\nimport { AppProvider, useAppContext } from \"./core/context\";\r\n\r\nexport const App = () => {\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const themeToggler = () => {\r\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\r\n      <AppProvider>\r\n        <AppWrapper>\r\n          <GlobalStyle />\r\n          <Header themeToggler={themeToggler} theme={theme} />\r\n          <Content />\r\n          <Footer />\r\n        </AppWrapper>\r\n      </AppProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nconst AppWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  max-width: 800px;\r\n  width: 100vw;\r\n  height: 100vh;\r\n`;\r\n","import { render } from \"@testing-library/react\";\nimport React from \"react\";\nimport { App } from \"./App\";\n\nconst root = document.querySelector(\"#root\");\nconst AppRender = () => {\n  render(<App />, root);\n};\n\nAppRender();\n"],"sourceRoot":""}