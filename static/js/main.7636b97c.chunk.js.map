{"version":3,"sources":["GlobalStyle.js","lib/theme/Theme.js","core/context.js","components/ui/Input/styles.js","components/ui/Input/Input.js","components/ChangeCity/styles.js","components/ChangeCity/ChangeCity.js","components/ui/ShowWeather/styles.js","components/ui/ShowWeather/ShowWeather.js","hooks/useWindDeg.js","components/Weather/styles.js","components/Weather/Weather.js","hooks/useWeather.js","components/ui/Content/styles.js","components/ui/Content/Content.js","assets/icons/OpenWeather.png","components/ui/Links/styles.js","components/ui/Links/Links.js","components/ui/Footer/styles.js","components/ui/Footer/Footer.js","components/ThemeToggler/ThemeToggler.js","components/ui/Header/styles.js","components/ui/Header/Header.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","theme","text","AppWrapper","styled","div","body","lightTheme","toggleBorder","headFoot","darkTheme","AppContext","createContext","AppProvider","props","useState","city","setCity","value","setValue","values","setTheme","Provider","children","useAppContext","useContext","InputPlace","input","Input","inputEl","ref","onChange","e","target","trim","placeholder","Form","form","Button","button","ChangeCity","onSubmit","preventDefault","ResultTitle","h4","ShowWeatherWrapper","section","ShowWeather","weatherData","winDeg","setWinDeg","useEffect","wind","deg","useWindDeg","style","lineHeight","margin","main","temp","temp_max","temp_min","clouds","all","humidity","pressure","toFixed","description","speed","WeathTitle","Weather","weather","setWeatherData","isLoading","setIsLoading","error","setError","fetch","then","response","json","result","cod","console","log","catch","useWeather","ContentWrapper","Content","Text","p","Anchor","a","Links","href","GithubOutlined","FooterWrapper","footer","ImgAPI","img","Footer","src","OpenWeather","alt","ThemeToggler","Switch","onClick","color","inputProps","HeaderWrapper","header","ChoosenCity","Header","App","root","document","querySelector","render"],"mappings":"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","file":"static/js/main.7636b97c.chunk.js","sourcesContent":["import styled, { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n * {  \r\n\tborder: none;  \r\n   outline: none;\r\n\t}  \r\n body {\r\n   color: ${({ theme }) => theme.text}; \r\n   font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\r\n   transition: all 0.50s linear;\r\n   display: flex;\r\n   justify-content: center;\r\n   margin: 0;\r\n   padding: 0;\r\n   list-style: none;\r\n   text-decoration: none;\r\n }\r\n a{\r\n   color: #000;\r\n    list-style: none;\r\n    text-decoration: none;\r\n }\r\n`;\r\n\r\nexport const AppWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  // max-width: 800px;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: ${({ theme }) => theme.body};\r\n`;\r\n","export const lightTheme = {\r\n  body: \"#FFF\",\r\n  text: \"#000\",\r\n  toggleBorder: \"#9c8cbb\",\r\n  headFoot: \"#9c8cbb\",\r\n};\r\n\r\nexport const darkTheme = {\r\n  body: \"#999\",\r\n  text: \"#fff\",\r\n  toggleBorder: \"#6B8096\",\r\n  headFoot: \"#363537\",\r\n};\r\n\r\n","import React, { createContext, useContext, useState } from \"react\";\r\nimport { lightTheme } from \"../lib/theme/Theme\";\r\n\r\nconst AppContext = createContext({});\r\n\r\nexport const AppProvider = (props) => {\r\n  const [city, setCity] = useState(\"\");\r\n  const [value, setValue] = useState(\"\");\r\n  const [theme, setTheme] = useState(lightTheme);\r\n\r\n  let values = { city, setCity, value, setValue, theme, setTheme };\r\n\r\n  return (\r\n    <AppContext.Provider value={values}>{props.children}</AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAppContext = () => useContext(AppContext);\r\n","import styled from \"styled-components\";\r\n\r\nexport const InputPlace = styled.input`\r\n  width: 280px;\r\n  height: 30px;\r\n  color: ${({ theme }) => theme.text};\r\n  background: transparent;\r\n  border: none;\r\n  border-bottom: 1px solid gray;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  &:focus {\r\n    box-shadow: 0px 0.2em 2.5em #c4c4c4;\r\n    transform: scale(1.025);\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useAppContext } from \"../../../core/context\";\r\nimport { InputPlace } from \"./styles\";\r\n\r\nexport const Input = () => {\r\n  let { setValue, value, inputEl } = useAppContext();\r\n  return (\r\n    <InputPlace\r\n      ref={inputEl}\r\n      value={value}\r\n      onChange={(e) => setValue(e.target.value.trim())}\r\n      placeholder=\"Название города\"\r\n    />\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nexport const Button = styled.button`\r\n  color: ${({ theme }) => theme.text};\r\n  background: ${({ theme }) => theme.toggleBorder};\r\n  margin-top: 20px;\r\n  width: 285px;\r\n  height: 40px;\r\n`;\r\n","import React from \"react\";\r\nimport { useAppContext } from \"../../core/context\";\r\nimport { Input } from \"../ui/Input\";\r\nimport { Button, Form } from \"./styles\";\r\n\r\nexport const ChangeCity = () => {\r\n  let { setCity, value, setValue } = useAppContext();\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    setCity(value);\r\n    setValue(\"\");\r\n  };\r\n  return (\r\n    <Form onSubmit={onSubmitForm}>\r\n      <Input />\r\n      <Button>Поиск</Button>\r\n    </Form>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const ResultTitle = styled.h4`\r\n  font-size: 18px;\r\n  font-weight: normal;\r\n  margin: 10px 0;\r\n`;\r\nexport const ShowWeatherWrapper = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 30px;\r\n  padding: 0;\r\n`;","import React from \"react\";\r\nimport {useWindDeg} from '../../../hooks/useWindDeg'\r\nimport { ResultTitle, ShowWeatherWrapper } from \"./styles\";\r\n\r\nexport const ShowWeather = ({ weatherData }) => {\r\n  let [winDeg] = useWindDeg(weatherData);\r\n  return (\r\n    <ShowWeatherWrapper>\r\n      <ResultTitle>Погода на сегодня</ResultTitle>\r\n      <p style={{ lineHeight: \"30px\", margin: \"0\" }}>\r\n        Температура: {weatherData?.main?.temp} ℃\r\n        <br />\r\n        Максимальная температура: {weatherData?.main?.temp_max} ℃\r\n        <br />\r\n        Минимальная температура: {weatherData?.main?.temp_min} ℃\r\n        <br />\r\n        Облачность: {weatherData?.clouds?.all}%\r\n        <br />\r\n        Влажность: {weatherData?.main?.humidity}%\r\n        <br />\r\n        Атмосферное давление: {(weatherData?.main?.pressure / 1.33).toFixed(\r\n          0\r\n        )}{\" \"}\r\n        мм рт.ст.\r\n        <br />\r\n        Погода:{\" \"}\r\n        {weatherData.weatherData ? weatherData?.weatherData[0].main : \"\"}\r\n        {weatherData.weatherData ? weatherData?.weatherData[0].description : \"\"}\r\n        <br />\r\n        Ветер: {winDeg}, {weatherData?.wind?.speed} м/с\r\n      </p>\r\n    </ShowWeatherWrapper>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useWindDeg = (weatherData) => {\r\n  const [winDeg, setWinDeg] = useState(\"no-data\");\r\n  useEffect(() => {\r\n    if (weatherData.wind.deg === 0 || weatherData.wind.deg === 360) {\r\n      setWinDeg(\"Северный\");\r\n    }\r\n    if (weatherData.wind.deg > 0 && weatherData.wind.deg < 90) {\r\n      setWinDeg(\"Северо-восточный\");\r\n    }\r\n    if (weatherData.wind.deg === 90) {\r\n      setWinDeg(\"Восточный\");\r\n    }\r\n    if (weatherData.wind.deg > 90 && weatherData.wind.deg < 180) {\r\n      setWinDeg(\"Юго-восточный\");\r\n    }\r\n    if (weatherData.wind.deg === 180) {\r\n      setWinDeg(\"Южный\");\r\n    }\r\n    if (weatherData.wind.deg > 180 && weatherData.wind.deg < 270) {\r\n      setWinDeg(\"Юго-западный\");\r\n    }\r\n    if (weatherData.wind.deg === 270) {\r\n      setWinDeg(\"Западный\");\r\n    }\r\n    if (weatherData.wind.deg > 270 && weatherData.wind.deg < 360) {\r\n      setWinDeg(\"Северо-западный\");\r\n    }\r\n  }, [weatherData]);\r\n\r\n  return [winDeg];\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const WeathTitle = styled.h4`\r\nfont-size: 18px;\r\nfont-weight: normal;\r\nmargin: 30% 0;\r\n`;","import React from \"react\";\r\nimport { useAppContext } from \"../../core/context\";\r\nimport { useWeather } from \"../../hooks/useWeather\";\r\nimport { ShowWeather } from \"../ui/ShowWeather/ShowWeather\";\r\nimport { WeathTitle } from \"./styles\";\r\n\r\nexport const Weather = () => {\r\n  let { city } = useAppContext();\r\n  const [weatherData, isLoading, error] = useWeather(city);\r\n  if (isLoading) {\r\n    return <WeathTitle>Загрузка</WeathTitle>;\r\n  }\r\n  if (error) {\r\n    return <WeathTitle>{error}</WeathTitle>;\r\n  }\r\n\r\n  return <ShowWeather weatherData={weatherData} />;\r\n};\r\n","import  { useEffect, useState } from \"react\";\r\n\r\nexport const useWeather = (city) => {\r\n  const [weatherData, setWeatherData] = useState({\r\n    clouds: \"\",\r\n    main: \"\",\r\n    weather: \"\",\r\n    wind: \"\",\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setError(null);\r\n    const API_KEY = `594e5978ad1b3ecaa1651cfb29c9a33d`;\r\n    setIsLoading(true);\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.cod === \"404\" ) {\r\n          setError('Город не найден');\r\n        }\r\n        if (result.cod === \"400\") {\r\n          setError('Напишите название города');\r\n        }\r\n        setWeatherData({\r\n          clouds: result?.clouds,\r\n          main: result?.main,\r\n          weather: result?.weather,\r\n          wind: result?.wind,\r\n        });\r\n        setIsLoading(false);\r\n        console.log(\"result\", result);\r\n      })\r\n      .catch((error) => setError(error));\r\n  }, [city]);\r\n  return [weatherData, isLoading, error];\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContentWrapper = styled.section`\r\n  display: flex;\r\n  padding: 10px;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-content: center;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n`;\r\n","import React from \"react\";\r\nimport { ChangeCity } from \"../../ChangeCity\";\r\nimport { Weather } from \"../../Weather\";\r\nimport { ContentWrapper } from \"./styles\";\r\n\r\nexport const Content = () => {\r\n  return (\r\n    <ContentWrapper>\r\n      <ChangeCity />\r\n      <Weather />\r\n    </ContentWrapper>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/OpenWeather.4595304d.png\";","import styled from \"styled-components\";\r\n\r\nexport const Text = styled.p`\r\n  font-size: 12px;\r\n  color: #fafafa;\r\n`;\r\n\r\nexport const Anchor = styled.a`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\nimport { GithubOutlined } from \"@ant-design/icons\";\r\nimport { Anchor, Text } from \"./styles\";\r\n\r\nexport const Links = () => {\r\n  return (\r\n    <Anchor href=\"https://github.com/Ting-SK\">\r\n      <GithubOutlined />\r\n      <Text>Ting-SK</Text>\r\n    </Anchor>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const FooterWrapper = styled.footer`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100px;\r\n  background: ${({theme})=>theme.headFoot};\r\n`;\r\n\r\nexport const ImgAPI = styled.img`\r\n  width: 100px;\r\n`;\r\n","import React from \"react\";\r\nimport OpenWeather from \"../../../assets/icons/OpenWeather.png\";\r\nimport { Links } from \"../Links\";\r\nimport { FooterWrapper, ImgAPI } from \"./styles\";\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <FooterWrapper>\r\n      <a href=\"https://openweathermap.org/\">\r\n        <ImgAPI src={OpenWeather} alt=\"asda\" />\r\n      </a>\r\n      <Links />\r\n    </FooterWrapper>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { useAppContext } from \"../../core/context\";\r\nimport { darkTheme, lightTheme } from \"../../lib/theme/Theme\";\r\n\r\nexport const ThemeToggler = () => {\r\n  const { theme, setTheme } = useAppContext();\r\n\r\n  const handleChange = () => {\r\n    theme === lightTheme ? setTheme(darkTheme) : setTheme(lightTheme);\r\n  };\r\n  console.log(\"theme\", theme);\r\n\r\n  return (\r\n    <Switch\r\n      value={theme}\r\n      onClick={handleChange}\r\n      color=\"primary\"\r\n      inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n    />\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const HeaderWrapper = styled.header`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 90px;\r\n  background: ${({theme})=>theme.headFoot};\r\n`;\r\n\r\nexport const ChoosenCity = styled.p`\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 16px;\r\n  text-decoration: underline;\r\n  overflow: hidden;\r\n  width: 100px;\r\n  text-overflow: ellipsis;\r\n  cursor: pointer;\r\n`;\r\n","import React from 'react'\r\nimport { ThemeToggler } from '../../ThemeToggler';\r\nimport { useAppContext } from \"../../../core/context\";\r\nimport { ChoosenCity, HeaderWrapper } from \"./styles\";\r\n\r\nexport const Header = () => {\r\n  let { city } = useAppContext();\r\n  return (\r\n    <HeaderWrapper>\r\n      <ThemeToggler />\r\n      <ChoosenCity>{city} </ChoosenCity>\r\n    </HeaderWrapper>\r\n  );\r\n};\r\n\r\n","import React from \"react\";\r\nimport { GlobalStyle, AppWrapper } from \"./GlobalStyle\";\r\nimport { Content } from \"./components/ui/Content\";\r\nimport { Footer } from \"./components/ui/Footer\";\r\nimport { Header } from \"./components/ui/Header\";\r\nimport { useAppContext } from \"./core/context\";\r\nimport { ThemeProvider } from \"styled-components\";\r\n\r\nexport const App = () => {\r\n  let { theme } = useAppContext();\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <AppWrapper>\r\n        <GlobalStyle />\r\n        <Header />\r\n        <Content />\r\n        <Footer />\r\n      </AppWrapper>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n","import { render } from \"@testing-library/react\";\nimport React from \"react\";\nimport { App } from \"./App\";\nimport { AppProvider } from \"./core/context\";\n\nconst root = document.querySelector(\"#root\");\nconst AppRender = () => {\n  render(\n    <AppProvider>\n      <App />\n    </AppProvider>,\n    root\n  );\n};\n\nAppRender();\n"],"sourceRoot":""}